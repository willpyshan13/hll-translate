import java.text.SimpleDateFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "config.gradle"
buildscript {
    ext.kotlin_version = '1.3.50'
    ext.kotlin_version = '1.3.41'
 
    repositories {
        google()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://developer.huawei.com/repo' }
        maven { url 'https://fabric-artifacts.s3.amazonaws.com/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0-SNAPSHOT'
        //如果 ButterKnife 插件和其他插件发生冲突而报错请试试 v8.4.0 版本的 ButterKnife 插件, 注意 v8.4.0 最高只能支持 com.android.tools.build:gradle:3.0.1
//        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'
        //Gradle Bintray Plugin
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'http://developer.huawei.com/repo' }
        maven { url 'https://fabric-artifacts.s3.amazonaws.com/public' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


ext {
    compileSdkVersion = 26
    buildToolsVersion = '26.0.2'
    minSdkVersion = 14
    targetSdkVersion = 26
    appTargetSdkVersion = 26
    versionCode = 67
    versionName = '6.6.7'
    sdkSourceCompatibility = 1.8
    sdkTargetCompatibility = 1.8
    appSourceCompatibility = 1.8
    appTargetCompatibility = 1.8
    nimOutputDir = "nim-outputs-${versionName}-${getBuildTime()}-${getGitVersion()}"

}

static def getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

static def getBuildTime() {
    Date date = new Date()
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd")
    return simpleDateFormat.format(date)
}
